// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bookings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a booking from selected seats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "summary": "Create a booking",
                "parameters": [
                    {
                        "description": "create booking request",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateBookingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateBookingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/bookings/hold-seat": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Hold a seat of a showtime (not lock seat other user still can book this seat)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seat"
                ],
                "summary": "Hold a seat",
                "parameters": [
                    {
                        "description": "request credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.HoldSeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.HoldSeatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/bookings/release-seat": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Unselect a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seat"
                ],
                "summary": "Release a seat",
                "parameters": [
                    {
                        "description": "request credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.ReleaseSeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.ReleaseSeatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "description": "Get list movies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get list movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.GetMoviesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Create a movie",
                "parameters": [
                    {
                        "description": "Create movie request",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateMovieRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}": {
            "get": {
                "description": "Get movie detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get movie detail",
                "parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.GetMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}/showtimes": {
            "get": {
                "description": "Get list showtimes of a movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "showtime"
                ],
                "summary": "Get list showtimes of a movie",
                "parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.GetShowtimesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/seats": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seat"
                ],
                "summary": "Create a seat",
                "parameters": [
                    {
                        "description": "create seat request",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateSeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateSeatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/showtimes": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a showtime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "showtime"
                ],
                "summary": "Create a showtime",
                "parameters": [
                    {
                        "description": "create showtime request",
                        "name": "showtime",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateShowtimeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.CreateShowtimeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/showtimes/{showtime_id}/seats": {
            "get": {
                "description": "Get seats of a showtime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seat"
                ],
                "summary": "Get seats of a showtime",
                "parameters": [
                    {
                        "type": "string",
                        "name": "showtime_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.GetSeatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/showtimes/{showtime_id}/seats/{seat_id}/interest": {
            "get": {
                "description": "Get quantity of interested user of this seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seat"
                ],
                "summary": "Get quantity of interested user of this seat",
                "parameters": [
                    {
                        "type": "string",
                        "name": "seat_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "showtime_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.GetSeatInterestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "request credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "request credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.UserRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorx.ErrorWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.BookingSeat": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "seat_id": {
                    "type": "string"
                },
                "showtime_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Movie": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "minutes",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Seat": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "row": {
                    "type": "string"
                },
                "screen_id": {
                    "description": "minutes",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.SeatWithStatus": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_available": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "row": {
                    "type": "string"
                },
                "screen_id": {
                    "description": "minutes",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Showtime": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                },
                "screen_id": {
                    "description": "minutes",
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "status": {
                    "description": "active,ban,disabled",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "errorx.ErrorBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "errorx.ErrorWrapper": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/errorx.ErrorBody"
                }
            }
        },
        "httpapi.BookingWithSeats": {
            "type": "object",
            "properties": {
                "booking_seats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BookingSeat"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "showtime_id": {
                    "type": "string"
                },
                "status": {
                    "description": "pending,confirmed,canceled",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "minutes",
                    "type": "string"
                }
            }
        },
        "httpapi.CreateBookingRequest": {
            "type": "object",
            "required": [
                "seat_ids",
                "showtime_id"
            ],
            "properties": {
                "seat_ids": {
                    "type": "array",
                    "maxItems": 5,
                    "items": {
                        "type": "string"
                    }
                },
                "showtime_id": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "httpapi.CreateBookingResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/httpapi.BookingWithSeats"
                }
            }
        },
        "httpapi.CreateMovieRequest": {
            "type": "object",
            "required": [
                "duration",
                "title"
            ],
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "httpapi.CreateMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.Movie"
                }
            }
        },
        "httpapi.CreateSeatRequest": {
            "type": "object",
            "required": [
                "class",
                "number",
                "row",
                "screen_id"
            ],
            "properties": {
                "class": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "integer"
                },
                "row": {
                    "type": "string",
                    "maxLength": 255
                },
                "screen_id": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "httpapi.CreateSeatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.Seat"
                }
            }
        },
        "httpapi.CreateShowtimeRequest": {
            "type": "object",
            "required": [
                "movie_id",
                "screen_id",
                "start_time"
            ],
            "properties": {
                "movie_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "screen_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "httpapi.CreateShowtimeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.Showtime"
                }
            }
        },
        "httpapi.GetMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.Movie"
                }
            }
        },
        "httpapi.GetMoviesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Movie"
                    }
                }
            }
        },
        "httpapi.GetSeatInterestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/httpapi.GetSeatInterestResponseData"
                }
            }
        },
        "httpapi.GetSeatInterestResponseData": {
            "type": "object",
            "properties": {
                "qty": {
                    "type": "integer"
                }
            }
        },
        "httpapi.GetSeatsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SeatWithStatus"
                    }
                }
            }
        },
        "httpapi.GetShowtimesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Showtime"
                    }
                }
            }
        },
        "httpapi.HoldSeatRequest": {
            "type": "object",
            "required": [
                "seat_id",
                "showtime_id"
            ],
            "properties": {
                "seat_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "showtime_id": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "httpapi.HoldSeatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/httpapi.HoldSeatResponseData"
                }
            }
        },
        "httpapi.HoldSeatResponseData": {
            "type": "object",
            "properties": {
                "qty": {
                    "description": "Number of users currently holding seats",
                    "type": "integer"
                }
            }
        },
        "httpapi.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 24
                }
            }
        },
        "httpapi.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/httpapi.UserWithAccessToken"
                }
            }
        },
        "httpapi.ReleaseSeatRequest": {
            "type": "object",
            "required": [
                "seat_id",
                "showtime_id"
            ],
            "properties": {
                "seat_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "showtime_id": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "httpapi.ReleaseSeatResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "httpapi.UserRegisterRequest": {
            "type": "object",
            "required": [
                "address",
                "password",
                "phone_number",
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 6
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 11
                },
                "username": {
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 6
                }
            }
        },
        "httpapi.UserRegisterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/httpapi.UserWithAccessToken"
                }
            }
        },
        "httpapi.UserWithAccessToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Cinema Booking API",
	Description:      "API for cinema booking",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
